.---------------.     
| So you're not |        .---------------.        .----------------.
| getting every |        | Do you set a  |        | On SUB sockets |
| message?      |    .-->| subscription  +------->| you have to    |
'--------+------'    |   | for messages? | No     | subscribe to   |
         |           |   '-------+-------'        | get messages   |
         v           |           |                '----------------'
.----------------.   |           v
| Are you losing |   |   .----------------.        .---------------.
| messages in a  +---'   | Do you start   |        | Start all SUB |
| SUB socket?    | Yes   | the SUB socket +------->| sockets first |
'--------+-------'       | after the PUB? | Yes    | then the PUB  |
         | No            '--------+-------'        | sockets to    |
         |                        | No             | avoid loss    |
         v                        v                '---------------'
.---------------.       .-----------------.
| Are you using | Yes   | See explanation |     .------------------.
| REQ and REP   +---.   | of slow joiners |     | Send and recv in |
| sockets?      |   |   | in the text     |     | a loop and check |
'--------+------'   |   '-----------------'  .->| return codes.    |
         |          '------------------------'  | With REP, recv   |
         | No                                   | and send         |
         v               .----------------.     '------------------'
.-----------------.      | First PULL can |
|  Are you using  +----->| grab many msgs |       .---------------.
|  PUSH sockets?  | Yes  | while others   +--.    | Use the load- |
'--------+--------'      | are still busy |  |    | balancing     |
         | No            | connecting     |  '--->| pattern and   |
         v               '----------------'       | ROUTER/DEALER |
.-----------------.                               | sockets       |
|  Do you check   | No    .-----------------.     '---------------'
| return codes on +---.   | Check every 0MQ |
|  all methods?   |   '-->| method call. In |
'--------+--------'       | C, use asserts  |
         | Yes            '-----------------'
         v
.-----------------.       .----------------.
| Are you using a |       | Do not share   |
| socket in more  +------>| sockets across |
| than 1 thread?  | Yes   | threads        |
'--------+--------'       '----------------'
         | No                                     .---------------.
         v                .----------------.      | To use inproc |
.---------------.         | Do you call    |      | your sockets  |
| Are you using |    .--->| zmq_ctx_new    +----->| must be in    |
| the inproc:// +----'    | twice or more? |Yes   | the same      |
| transport?    | Yes     '--------+-------'      | 0MQ context   |
'--------+------'                  | No           '---------------'
         | No                      v             
         v                .-----------------.
.-----------------.       | Check that you  |
|  Are you using  | Yes   | bind before you |
| ROUTER sockets? +---.   | connect         |
'--------+--------'   |   '-----------------'
         | No         |
         v            |   .----------------.     .------------.
.----------------.    |   | Check that the |     | If you use |
| Make a minimal |    |   | reply address  |     | identities |
| test case, ask |    '-->| is valid. 0MQ  +---->| set them   |
| on IRC channel |        | drops messages |     | before you |
'----------------'        | it can't route |     | connect    |
                          '----------------'     '------------'
